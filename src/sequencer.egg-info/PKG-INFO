Metadata-Version: 2.4
Name: sequencer
Version: 0.1.0
Summary: A minimalist audio/MIDI sequencer in Python.
Home-page: https://github.com/example/sequencer
Author: Jules
Author-email: jules@example.com
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: mido[ports-rtmidi]>=1.2.10
Dynamic: author
Dynamic: author-email
Dynamic: description
Dynamic: description-content-type
Dynamic: home-page
Dynamic: license-file
Dynamic: requires-dist
Dynamic: summary

# Sequencer minimaliste audio/midi en python

This project is a minimalist audio/MIDI sequencer in Python.

## Installation (Linux)

1.  **Clonez le projet** (si ce n'est pas déjà fait)
    ```bash
    git clone <repository_url>
    cd <repository_directory>
    ```

2.  **Créez et activez un environnement virtuel**
    ```bash
    python3 -m venv venv
    source venv/bin/activate
    ```

3.  **Installez le projet**
    Pour une utilisation normale, installez le projet avec `pip` :
    ```bash
    pip install .
    ```
    Pour le développement (ce qui vous permet de modifier le code et de voir les changements immédiatement), utilisez le mode "éditable" :
    ```bash
    pip install -e .
    ```
    Cette commande installera également les dépendances listées dans `setup.py` (comme `midiutil`).

## How to use

Une fois le projet installé, vous pouvez importer le module `sequencer` dans n'importe quel script Python. Voici un exemple de comment créer une chanson simple et l'exporter dans un fichier MIDI.

Sauvegardez ce code dans un fichier (par exemple, `create_song.py`) et exécutez-le avec `python create_song.py`.

```python
from sequencer.models import Song, Track, Event, Note
from sequencer.midi_export import export_to_midi

def main():
    """Creates a simple song and exports it to a MIDI file."""
    # 1. Create a song
    song = Song(name="Simple Song", tempo=120)

    # 2. Create a track
    piano_track = Track(name="Piano Melody", instrument=0) # 0 is Acoustic Grand Piano

    # 3. Add notes to the track (a C-major scale)
    c_major_scale = [60, 62, 64, 65, 67, 69, 71, 72] # MIDI note numbers for C4 to C5
    for i, pitch in enumerate(c_major_scale):
        note = Note(pitch=pitch, velocity=100, duration=0.5)
        event = Event(notes=[note], start_time=i * 0.5)
        piano_track.add_event(event)

    # 4. Add the track to the song
    song.add_track(piano_track)

    # 5. Export the song to a MIDI file
    output_filename = "simple_song.mid"
    export_to_midi(song, output_filename)

    print(f"Song '{song.name}' has been successfully exported to '{output_filename}'")

if __name__ == "__main__":
    main()
```
